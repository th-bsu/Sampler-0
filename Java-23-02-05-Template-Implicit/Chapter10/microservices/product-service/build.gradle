buildscript {
	ext {
		springBootVersion = '2.3.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'se.simple.microservices.core.product'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = 1.8

ext {
	mapstructVersion = "1.3.1.Final"
	springCloudVersion = "Hoxton.SR6"
}

repositories {
	mavenCentral()
}

dependencies {
	implementation project(':api')
	implementation project(':util')
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	implementation('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
	implementation('org.springframework.cloud:spring-cloud-starter-stream-rabbit')
	implementation('org.springframework.cloud:spring-cloud-starter-stream-kafka')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	implementation("org.mapstruct:mapstruct:${mapstructVersion}")

	// TH: helps declare dependencies to be used only at complile time in conjunction with Java plug-in.
	// TH: helps avoid inclusion in run-time classpath and exposure to dependent projects.
	// TH: https://docs.gradle.org/2.12/release-notes.html#support-for-declaring-compile-time-only-dependencies-with-java-plugin
	compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	
	// TH: helps handle code generation with annotations.
	// TH: https://www.jetbrains.com/help/idea/annotation-processors-support.html#998cb9ab
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.cloud:spring-cloud-stream-test-support')
	testImplementation('io.projectreactor:reactor-test')
	testImplementation('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
